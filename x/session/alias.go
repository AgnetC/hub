// nolint
// autogenerated code using github.com/rigelrozanski/multitool
// aliases generated for the following subdirectories:
// ALIASGEN: github.com/sentinel-official/hub/x/session/types
// ALIASGEN: github.com/sentinel-official/hub/x/session/keeper
// ALIASGEN: github.com/sentinel-official/hub/x/session/querier
package session

import (
	"github.com/sentinel-official/hub/x/session/keeper"
	"github.com/sentinel-official/hub/x/session/types"
)

const (
	Codespace                    = types.Codespace
	EventTypeSetSessionsCount    = types.EventTypeSetSessionsCount
	EventTypeSetActiveSession    = types.EventTypeSetActiveSession
	EventTypeUpdateSession       = types.EventTypeUpdateSession
	AttributeKeyCount            = types.AttributeKeyCount
	AttributeKeyID               = types.AttributeKeyID
	AttributeKeySubscription     = types.AttributeKeySubscription
	AttributeKeyNode             = types.AttributeKeyNode
	AttributeKeyAddress          = types.AttributeKeyAddress
	ModuleName                   = types.ModuleName
	ParamsSubspace               = types.ParamsSubspace
	QuerierRoute                 = types.QuerierRoute
	DefaultInactiveDuration      = types.DefaultInactiveDuration
	QuerySession                 = types.QuerySession
	QuerySessions                = types.QuerySessions
	QuerySessionsForSubscription = types.QuerySessionsForSubscription
	QuerySessionsForNode         = types.QuerySessionsForNode
	QuerySessionsForAddress      = types.QuerySessionsForAddress
)

var (
	// functions aliases
	RegisterCodec                         = types.RegisterCodec
	ErrorMarshal                          = types.ErrorMarshal
	ErrorUnmarshal                        = types.ErrorUnmarshal
	ErrorUnknownMsgType                   = types.ErrorUnknownMsgType
	ErrorUnknownQueryType                 = types.ErrorUnknownQueryType
	ErrorInvalidField                     = types.ErrorInvalidField
	ErrorSubscriptionDoesNotExit          = types.ErrorSubscriptionDoesNotExit
	ErrorInvalidSubscriptionStatus        = types.ErrorInvalidSubscriptionStatus
	ErrorUnauthorized                     = types.ErrorUnauthorized
	ErrorAddressWasNotAdded               = types.ErrorAddressWasNotAdded
	ErrorInvalidDuration                  = types.ErrorInvalidDuration
	ErrorInvalidBandwidth                 = types.ErrorInvalidBandwidth
	NewGenesisState                       = types.NewGenesisState
	DefaultGenesisState                   = types.DefaultGenesisState
	SessionKey                            = types.SessionKey
	ActiveSessionKey                      = types.ActiveSessionKey
	NewMsgUpdateSession                   = types.NewMsgUpdateSession
	NewParams                             = types.NewParams
	DefaultParams                         = types.DefaultParams
	ParamsKeyTable                        = types.ParamsKeyTable
	NewQuerySessionParams                 = types.NewQuerySessionParams
	NewQuerySessionsForSubscriptionParams = types.NewQuerySessionsForSubscriptionParams
	NewQuerySessionsForNodeParams         = types.NewQuerySessionsForNodeParams
	NewQuerySessionsForAddressParams      = types.NewQuerySessionsForAddressParams
	NewKeeper                             = keeper.NewKeeper

	// variable aliases
	ModuleCdc              = types.ModuleCdc
	RouterKey              = types.RouterKey
	StoreKey               = types.StoreKey
	SessionsCountKey       = types.SessionsCountKey
	SessionKeyPrefix       = types.SessionKeyPrefix
	ActiveSessionKeyPrefix = types.ActiveSessionKeyPrefix
	KeyInactiveDuration    = types.KeyInactiveDuration
)

type (
	GenesisState                       = types.GenesisState
	MsgUpdateSession                   = types.MsgUpdateSession
	Params                             = types.Params
	QuerySessionParams                 = types.QuerySessionParams
	QuerySessionsForSubscriptionParams = types.QuerySessionsForSubscriptionParams
	QuerySessionsForNodeParams         = types.QuerySessionsForNodeParams
	QuerySessionsForAddressParams      = types.QuerySessionsForAddressParams
	Session                            = types.Session
	Sessions                           = types.Sessions
	Keeper                             = keeper.Keeper
)
