syntax = "proto3";
package sentinel.node.types;

option go_package = "github.com/sentinel-official/hub/x/node/types";

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";

import "github.com/sentinel-official/hub/types/status.proto";

message MsgRegisterRequest {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;
  option (gogoproto.goproto_stringer) = true;

  string from = 1;
  string provider = 2;
  repeated cosmos.base.v1beta1.Coin price = 3 [
    (gogoproto.nullable) = false
  ];
  string remoteURL = 4 [
    (gogoproto.jsontag) = "remote_url,omitempty"
  ];
}

message MsgUpdateRequest {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;
  option (gogoproto.goproto_stringer) = true;

  string from = 1;
  string provider = 2;
  repeated cosmos.base.v1beta1.Coin price = 3 [
    (gogoproto.nullable) = false
  ];
  string remoteURL = 4 [
    (gogoproto.jsontag) = "remote_url,omitempty"
  ];
}

message MsgSetStatusRequest {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;
  option (gogoproto.goproto_stringer) = true;

  string from = 1;
  sentinel.types.Status status = 2;
}

message MsgRegisterResponse{}
message MsgUpdateResponse{}
message MsgSetStatusResponse{}

service Msg {
  rpc RegisterRequest(MsgRegisterRequest) returns (MsgRegisterResponse);
  rpc UpdateRequest(MsgUpdateRequest) returns (MsgUpdateResponse);
  rpc SetStatusRequest(MsgSetStatusRequest) returns (MsgSetStatusResponse);
}
