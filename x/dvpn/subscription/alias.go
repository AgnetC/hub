// nolint
// autogenerated code using github.com/rigelrozanski/multitool
// aliases generated for the following subdirectories:
// ALIASGEN: github.com/sentinel-official/hub/x/dvpn/subscription/keeper
// ALIASGEN: github.com/sentinel-official/hub/x/dvpn/subscription/querier
// ALIASGEN: github.com/sentinel-official/hub/x/dvpn/subscription/types
// ALIASGEN: github.com/sentinel-official/hub/x/dvpn/subscription/client/cli
// ALIASGEN: github.com/sentinel-official/hub/x/dvpn/subscription/client/rest
package subscription

import (
	"github.com/sentinel-official/hub/x/dvpn/subscription/client/cli"
	"github.com/sentinel-official/hub/x/dvpn/subscription/client/rest"
	"github.com/sentinel-official/hub/x/dvpn/subscription/keeper"
	"github.com/sentinel-official/hub/x/dvpn/subscription/querier"
	"github.com/sentinel-official/hub/x/dvpn/subscription/types"
)

const (
	Codespace              = types.Codespace
	EventTypeSetPlan       = types.EventTypeSetPlan
	EventTypeSetPlansCount = types.EventTypeSetPlansCount
	EventTypeSetPlanStatus = types.EventTypeSetPlanStatus
	AttributeKeyAddress    = types.AttributeKeyAddress
	AttributeKeyID         = types.AttributeKeyID
	AttributeKeyCount      = types.AttributeKeyCount
	AttributeKeyStatus     = types.AttributeKeyStatus
	ModuleName             = types.ModuleName
	QuerierRoute           = types.QuerierRoute
	QueryPlan              = types.QueryPlan
	QueryPlans             = types.QueryPlans
	QueryPlansOfProvider   = types.QueryPlansOfProvider
)

var (
	// functions aliases
	NewKeeper                     = keeper.NewKeeper
	Querier                       = querier.Querier
	RegisterCodec                 = types.RegisterCodec
	ErrorMarshal                  = types.ErrorMarshal
	ErrorUnmarshal                = types.ErrorUnmarshal
	ErrorUnknownMsgType           = types.ErrorUnknownMsgType
	ErrorUnknownQueryType         = types.ErrorUnknownQueryType
	ErrorInvalidField             = types.ErrorInvalidField
	ErrorNoProviderFound          = types.ErrorNoProviderFound
	ErrorNoPlanFound              = types.ErrorNoPlanFound
	NewGenesisState               = types.NewGenesisState
	DefaultGenesisState           = types.DefaultGenesisState
	PlansCountKey                 = types.PlansCountKey
	PlanForProviderKeyPrefix      = types.PlanForProviderKeyPrefix
	PlanKey                       = types.PlanKey
	NodeForProviderKeyPrefix      = types.NodeForProviderKeyPrefix
	NodeForPlanKeyPrefix          = types.NodeForPlanKeyPrefix
	NodeKey                       = types.NodeKey
	NewMsgAddPlan                 = types.NewMsgAddPlan
	NewMsgSetPlanStatus           = types.NewMsgSetPlanStatus
	NewQueryPlanParams            = types.NewQueryPlanParams
	NewQueryPlansOfProviderParams = types.NewQueryPlansOfProviderParams
	GetQueryCommands              = cli.GetQueryCommands
	GetTxCommands                 = cli.GetTxCommands
	RegisterRoutes                = rest.RegisterRoutes

	// variable aliases
	ModuleCdc           = types.ModuleCdc
	RouterKey           = types.RouterKey
	StoreKey            = types.StoreKey
	PlansCountKeyPrefix = types.PlansCountKeyPrefix
	PlanKeyPrefix       = types.PlanKeyPrefix
	NodeKeyPrefix       = types.NodeKeyPrefix
)

type (
	Keeper                     = keeper.Keeper
	GenesisState               = types.GenesisState
	MsgAddPlan                 = types.MsgAddPlan
	MsgSetPlanStatus           = types.MsgSetPlanStatus
	Plan                       = types.Plan
	Plans                      = types.Plans
	QueryPlanParams            = types.QueryPlanParams
	QueryPlansOfProviderParams = types.QueryPlansOfProviderParams
)
