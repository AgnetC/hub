syntax = "proto3";
package sentinel.plan.v1;

option go_package = "github.com/sentinel-official/hub/x/plan/types";

import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto";
import "google/protobuf/duration.proto";

import "sentinel/types/v1/status.proto";

message AddRequest {
  option (gogoproto.equal)            = false;
  option (gogoproto.goproto_getters)  = false;
  option (gogoproto.goproto_stringer) = true;

  string from                             = 1;
  repeated cosmos.base.v1beta1.Coin price = 2 [
    (gogoproto.nullable)     = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
  google.protobuf.Duration validity = 3
      [ (gogoproto.stdduration) = true, (gogoproto.nullable) = false ];
  string bytes = 4 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable)   = false
  ];
}

message SetStatusRequest {
  option (gogoproto.equal)            = false;
  option (gogoproto.goproto_getters)  = false;
  option (gogoproto.goproto_stringer) = true;

  string from                     = 1;
  uint64 id                       = 2;
  sentinel.types.v1.Status status = 3;
}

message AddNodeRequest {
  option (gogoproto.equal)            = false;
  option (gogoproto.goproto_getters)  = false;
  option (gogoproto.goproto_stringer) = true;

  string from    = 1;
  uint64 id      = 2;
  string address = 3;
}

message RemoveNodeRequest {
  option (gogoproto.equal)            = false;
  option (gogoproto.goproto_getters)  = false;
  option (gogoproto.goproto_stringer) = true;

  string from    = 1;
  uint64 id      = 2;
  string address = 3;
}

message AddResponse {}
message SetStatusResponse {}
message AddNodeResponse {}
message RemoveNodeResponse {}

service MsgService {
  rpc Add(AddRequest) returns (AddResponse);
  rpc SetStatus(SetStatusRequest) returns (SetStatusResponse);
  rpc AddNode(AddNodeRequest) returns (AddNodeResponse);
  rpc RemoveNode(RemoveNodeRequest) returns (RemoveNodeResponse);
}
